import { FC, useEffect, useCallback, useState } from "react";
import Head from "next/head";
import { Chat, Room, User } from "@/types";
import { isLoggedIn, showErrorMessage } from "@/utils";
import axios from "axios";
import { API_URL } from "@/config";
import LoadingDots from "@/components/Loader";

type Props = {
  userData: User;
};

const Home: FC<Props> = ({ userData }) => {
  const [loadingRooms, setLoadingRooms] = useState(true);
  const [loadingChats, setLoadingChats] = useState(false);
  const [chats, setChats] = useState<Array<Chat>>([]);
  const [rooms, setRooms] = useState<Array<Room>>([]);

  const loadChatRooms = useCallback(async () => {
    try {
      setLoadingRooms(true);
      const { data } = await axios.get(`${API_URL}/rooms`, {
        headers: {
          Authorization: `Bearer ${userData.token}`,
        },
      });
      setRooms(data);
      setLoadingRooms(false);
    } catch (err) {
      showErrorMessage(err);
      setLoadingRooms(false);
    }
  }, [userData]);

  useEffect(() => {
    loadChatRooms();
  }, [loadChatRooms]);

  return (
    <>
      <Head>
        <title>Chat Room</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="container">
        <aside className="sidebar">
          <h2>Chat Rooms</h2>
          {loadingRooms ? (
            <LoadingDots />
          ) : (
            <ul>
              {rooms.map((room) => (
                <li key={room.id}>
                  <h4>{room.name}</h4>
                  <p>{room.lastMessage}</p>
                </li>
              ))}
            </ul>
          )}
        </aside>
        <main className="main-content">
          <header className="chat-header">
            <h1>Welcome to the Chat</h1>
          </header>
          <div className="chat-area"></div>
          <form id="chat-form">
            <input type="text" id="message" placeholder="Type a message..." />
            <button type="submit">Send</button>
          </form>
        </main>
      </div>
    </>
  );
};

export default Home;

export async function getServerSideProps({ req }) {
  const userData = isLoggedIn(req);
  if (userData) {
    return {
      props: {
        userData,
      },
    };
  } else {
    return {
      props: {},
      redirect: {
        destination: "/auth/login",
        permanent: false,
      },
    };
  }
}
